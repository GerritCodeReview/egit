{
  "comments": [
    {
      "key": {
        "uuid": "e5a31d17_5855a6d4",
        "filename": "org.eclipse.egit.core/src/org/eclipse/egit/core/RepositoryCache.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-02-15T18:05:07Z",
      "side": 1,
      "message": "As with comment on instance cache; I\u0027m not sure delaying this until the method call actually buys you anything. If the first use of RepositoryCache is to call this method, then there\u0027s not a lot of difference in just putting it straight into the static final field.\n\nThere\u0027s also a lot of calls to e.g. `cache \u003d InstanceCache.getInstance()` and `if cache !\u003d null` going on -- if you just had this as a public static final field then you would end up being able to simplify a bunch of the `if` statements as well.",
      "revId": "c2e74a8940c4a5bd672ffa0fcf13c4e0558ae931",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abad710e_18b3306c",
        "filename": "org.eclipse.egit.core/src/org/eclipse/egit/core/RepositoryInitializer.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-02-15T18:05:07Z",
      "side": 1,
      "message": "This is triggering the side-effect of initialising the `IndexDiffCache` which you wouldn\u0027t need if it were a final field of `IndexDiffCache`.",
      "revId": "c2e74a8940c4a5bd672ffa0fcf13c4e0558ae931",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed466672_c33883f1",
        "filename": "org.eclipse.egit.core/src/org/eclipse/egit/core/RepositoryInitializer.java",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-02-15T18:05:07Z",
      "side": 1,
      "message": "What does this do? Does it make the instance field null, so that it\u0027s re-created again, or does it drop the contents of any contained maps?",
      "revId": "c2e74a8940c4a5bd672ffa0fcf13c4e0558ae931",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00b87b27_3ec6e361",
        "filename": "org.eclipse.egit.core/src/org/eclipse/egit/core/RepositoryUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 102,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-02-15T18:05:07Z",
      "side": 1,
      "message": "I think there\u0027s a danger this could deadlock but I think I understand the rationale here.",
      "revId": "c2e74a8940c4a5bd672ffa0fcf13c4e0558ae931",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f3f721f_6684c7fa",
        "filename": "org.eclipse.egit.core/src/org/eclipse/egit/core/RepositoryUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-02-15T18:05:07Z",
      "side": 1,
      "message": "Not clear where this is being called from -- but maybe I\u0027ve just missed it.",
      "revId": "c2e74a8940c4a5bd672ffa0fcf13c4e0558ae931",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3afcf54_0f26e6a0",
        "filename": "org.eclipse.egit.core/src/org/eclipse/egit/core/internal/EclipseSystemReader.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-02-15T18:05:07Z",
      "side": 1,
      "message": "Worth wrapping in an Objects.requireNonNull or similar here? Most of the APIs will fail if it\u0027s null from what I can tell.",
      "revId": "c2e74a8940c4a5bd672ffa0fcf13c4e0558ae931",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "077ec010_40e66dd8",
        "filename": "org.eclipse.egit.core/src/org/eclipse/egit/core/internal/indexdiff/IndexDiffCache.java",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-02-15T18:05:07Z",
      "side": 1,
      "message": "This seems like a lot of overhead to assign a static variable on demand. Why not just have it as `private static final IndexDiffCache instance \u003d new IndexDiffCache()` instead?\n\nIf the only static method you\u0027ve got is `.getInstance()` and the only time you\u0027ll call this cache is when you\u0027re loading the class, by which time you\u0027re not really saving anything by not having it in the instance field.\n\nIs there static behaviour which requires the RepositoryCache to be set up first? If so, you could put that in a `static {}` block for this class ahead of the instance field.",
      "revId": "c2e74a8940c4a5bd672ffa0fcf13c4e0558ae931",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbb61328_d5852c55",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/MultiPullResultDialog.java",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-02-15T18:05:07Z",
      "side": 1,
      "message": "This is where a deadlock in RepositoryUtil.getInstance would be nasty; when creating the Dialog we\u0027d be blocked at this point until it appeared.",
      "revId": "c2e74a8940c4a5bd672ffa0fcf13c4e0558ae931",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b89dfa44_be4e45ef",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/repository/RepositoriesView.java",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 3
      },
      "writtenOn": "2021-02-15T18:05:07Z",
      "side": 1,
      "message": "This could also potentially be a nasty deadlock when showing a view.",
      "revId": "c2e74a8940c4a5bd672ffa0fcf13c4e0558ae931",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}