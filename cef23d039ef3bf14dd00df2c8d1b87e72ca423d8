{
  "comments": [
    {
      "key": {
        "uuid": "8ab8a5e1_d6ebace0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-08-30T22:09:47Z",
      "side": 1,
      "message": "on",
      "range": {
        "startLine": 21,
        "startChar": 16,
        "endLine": 21,
        "endChar": 18
      },
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6b7d191_084aeb5c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 44628
      },
      "writtenOn": "2019-09-01T11:20:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ab8a5e1_d6ebace0",
      "range": {
        "startLine": 21,
        "startChar": 16,
        "endLine": 21,
        "endChar": 18
      },
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "605fd1ba_5ab36f79",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-08-30T22:09:47Z",
      "side": 1,
      "message": "How expensive is accessing the config file\u0027s meta data ? If it didn\u0027t change it\u0027s 1 stat call per config to be checked, or did I miss something ?\n\nI agree overall this could still be expensive since there are many files.\n\nDo you have some statistics from testing this ?",
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "581df4bf_82625d27",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 44628
      },
      "writtenOn": "2019-08-30T22:33:30Z",
      "side": 1,
      "message": "No statistics. On my Mac stat is cheap, the UI was never unbearably sluggish. But the effect is quite noticeable even on my Mac.\n\nYes, it\u0027s 1 stat call per config, and 3 configs each time you access Repository.getConfig(). For getting head you also get 1 stat call for HEAD, 1 for packed_refs, and 1 for refs/heads/master. We get HEAD very often.\n\nWe do know from previous bugs that accessing file metadata is fairly expensive on Windows. I\u0027d be really interested in what Michael says; he\u0027s using Windows.",
      "parentUuid": "605fd1ba_5ab36f79",
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "591288d3_ad338395",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-08-30T22:09:47Z",
      "side": 1,
      "message": "Why ? \nThe repository state can also change by external processes e.g. git command line.\nCan we ignore them for evaluations happening synchronously in the UI thread ?",
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af8a9936_6f9ec943",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 44628
      },
      "writtenOn": "2019-08-30T22:33:30Z",
      "side": 1,
      "message": "I think so. Have you ever seen a context menu with some item enabled/disabled based on state before the external change was picked up, and another item with state picked up after the external change? It could happen theoretically already. With the new code, at least all menu items would use a consistent state (even if it would be slightly out of date).",
      "parentUuid": "591288d3_ad338395",
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b98fb047_360d348d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-09-01T16:40:08Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "af8a9936_6f9ec943",
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd36acd2_2ccf80c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-08-30T22:09:47Z",
      "side": 1,
      "message": "Do you have some statistics from testing this ?\n\nWe could try to use strace (on Linux) or dtrace (on Mac) to get stats about file system accesses when running some test.",
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dce9f5d6_56e3ccb5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 44628
      },
      "writtenOn": "2019-08-30T22:33:30Z",
      "side": 1,
      "message": "No. I did the easy thing: count the calls in-process (just added counters in jgit).",
      "parentUuid": "cd36acd2_2ccf80c1",
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083c2844_0ea99d81",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/SimpleConfigureFetchDialog.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-08-31T14:12:56Z",
      "side": 1,
      "message": "What\u0027s the reason for introducing 2 methods in both dialogs? I thought it either always makes sense to use the cached data and to rely on it, or never. How should a client decide whether to call the old or new method?",
      "range": {
        "startLine": 109,
        "startChar": 1,
        "endLine": 109,
        "endChar": 53
      },
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e96a42bb_f7f6406e",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/SimpleConfigureFetchDialog.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 44628
      },
      "writtenOn": "2019-08-31T14:41:24Z",
      "side": 1,
      "message": "As it says in the javadoc: intended for use in property testers and isEnabled(). In other contexts use the other one.\n\nI don\u0027t want the execution of commands to rely on possibly slightly outdated state. For handler evaluations it can happen anyway, so I thought it was OK to do this.\nAlso, for command _execution_, these file accesses are only a small part of the overall cost. But for handler evaluations, they are a major factor.",
      "parentUuid": "083c2844_0ea99d81",
      "range": {
        "startLine": 109,
        "startChar": 1,
        "endLine": 109,
        "endChar": 53
      },
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcf34787_202f1ef2",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/RepositoryStateCache.java",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-08-31T14:12:56Z",
      "side": 1,
      "message": "I guess it is okay that some of the now replaced callers used exactRef(), while others used resolve()?",
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b71eaa91_5a9bf7cb",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/RepositoryStateCache.java",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 44628
      },
      "writtenOn": "2019-08-31T14:41:24Z",
      "side": 1,
      "message": "The exactRef() calls were mostly of the form\n\n  Ref head \u003d repo.exactRef(Constants.HEAD)\n  return head !\u003d null \u0026\u0026 head.getObjectId() !\u003d null;\n\nThat can be replaced by\n\n  return RepositoryStateCache.INSTANCE.getHead(repo) !\u003d null;\n\nI think there is one that was replaced by getHeadRef().\n\nresolve(Constants.HEAD) can be replaced by getHead().",
      "parentUuid": "dcf34787_202f1ef2",
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f9cdcca_74cf2bfa",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/RepositoryStateCache.java",
        "patchSetId": 2
      },
      "lineNbr": 212,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-08-31T14:12:56Z",
      "side": 1,
      "message": "you can return the names as is (even for null)...\n\n(continue in line 297)",
      "range": {
        "startLine": 212,
        "startChar": 38,
        "endLine": 212,
        "endChar": 40
      },
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "099ce2c2_02fa133e",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/RepositoryStateCache.java",
        "patchSetId": 2
      },
      "lineNbr": 212,
      "author": {
        "id": 44628
      },
      "writtenOn": "2019-08-31T14:41:24Z",
      "side": 1,
      "message": "No, getFullBranchName() would trigger repeated re-evaluations.",
      "parentUuid": "2f9cdcca_74cf2bfa",
      "range": {
        "startLine": 212,
        "startChar": 38,
        "endLine": 212,
        "endChar": 40
      },
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed50a880_f7f1fad2",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/RepositoryStateCache.java",
        "patchSetId": 2
      },
      "lineNbr": 236,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-08-31T14:12:56Z",
      "side": 1,
      "message": "you could get rid of the code duplication for this block at the cost of calling items.get(foobar) again afterwards instead of remembering 1 of the 3 values each time.\nHowever, since this is meant to improve performance, it seems acceptable to have that code duplication.",
      "range": {
        "startLine": 229,
        "startChar": 0,
        "endLine": 236,
        "endChar": 55
      },
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0f704f6_1ca8e8b8",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/RepositoryStateCache.java",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-08-31T14:12:56Z",
      "side": 1,
      "message": "...if you are converting the empty string back to null anyway, thereby making this if-statement superfluous",
      "range": {
        "startLine": 297,
        "startChar": 19,
        "endLine": 297,
        "endChar": 36
      },
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b9fb056_8cb34ac2",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/selection/RepositoryStateCache.java",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 44628
      },
      "writtenOn": "2019-08-31T14:41:24Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "b0f704f6_1ca8e8b8",
      "range": {
        "startLine": 297,
        "startChar": 19,
        "endLine": 297,
        "endChar": 36
      },
      "revId": "cef23d039ef3bf14dd00df2c8d1b87e72ca423d8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}