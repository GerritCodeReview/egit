{
  "comments": [
    {
      "key": {
        "uuid": "07b223f6_5f4da317",
        "filename": "org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/MockLogicalResourceMapping.java",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 44628
      },
      "writtenOn": "2016-09-28T08:06:29Z",
      "side": 1,
      "message": "Please specifiy the encoding.",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_72db71e4",
        "filename": "org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/MockLogicalResourceMapping.java",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 6332
      },
      "writtenOn": "2016-10-03T08:55:24Z",
      "side": 1,
      "message": "Ok, will do.",
      "parentUuid": "07b223f6_5f4da317",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_13b24900",
        "filename": "org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/SynchronizeViewRemoteAwareChangeSetModelTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 44628
      },
      "writtenOn": "2016-09-27T17:02:23Z",
      "side": 1,
      "message": "This test fails consistently in maven build on my Mac. See comment and screenshot on bug 501990; can\u0027t attach images here.",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_92e9e57a",
        "filename": "org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/SynchronizeViewRemoteAwareChangeSetModelTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6332
      },
      "writtenOn": "2016-10-03T08:55:24Z",
      "side": 1,
      "message": "I reproduced your issue on the mac of a colleague of mine.\nI\u0027m waiting to have a more permanent access to a mac to see where this comes from. I\u0027m under windows and the test passes.\nDoes the test pass when you run it manually (is it only in maven that it fails)?",
      "parentUuid": "07b223f6_13b24900",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_ba823b0a",
        "filename": "org.eclipse.egit.ui.test/src/org/eclipse/egit/ui/view/synchronize/SynchronizeViewRemoteAwareChangeSetModelTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6332
      },
      "writtenOn": "2016-10-04T11:01:22Z",
      "side": 1,
      "message": "The problem was due to other tests that set up a specific team content provider, which has side effects on other tests.\nI fixed that by adding a relevant set-up to the failing test so that it always uses the expected team content provider.\n\nI\u0027m unable to properly build egit under windows, I confess I never succeeded to have all the tests passing. I had only ran the test in isolation before pushing it, sorry about that.",
      "parentUuid": "07b223f6_92e9e57a",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_5f312374",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/ModelAwareSyncStrategy.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 44628
      },
      "writtenOn": "2016-09-28T08:23:24Z",
      "side": 1,
      "message": "Too much code duplication with the super class here. Introduce canCompareDirectly(IFile) in SyncStrategy (returning true), call it in the super implementation of this method, then remove this override.\n\nWould it make sense to also introduce an ISynchronizationStrategy interface? Besides, can we rename \"SyncStrategy\" to \"SynchronizationStrategy\", please? We have auto-completion, so long names should not be a typing problem :-), and in general I think abbreviations in names are best avoided.",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_32d1f9c4",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/ModelAwareSyncStrategy.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 6332
      },
      "writtenOn": "2016-10-03T08:55:24Z",
      "side": 1,
      "message": "Ok, I\u0027ll reduce code duplication and rename for non-abbreviated names (I used an abbreviation in the first place because I had the feeling that it was what was usually done in EGit/JGit. My mistake)",
      "parentUuid": "07b223f6_5f312374",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_1cc24c9c",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/ModelAwareSyncStrategy.java",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 44628
      },
      "writtenOn": "2016-10-01T15:30:59Z",
      "side": 1,
      "message": "This is expensive; it\u0027ll consider the whole repository in the subscriber.init() call below. Can\u0027t we restrict this to a set of possible paths?",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_f2cf8124",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/ModelAwareSyncStrategy.java",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 6332
      },
      "writtenOn": "2016-10-03T08:55:24Z",
      "side": 1,
      "message": "Unfortunately, we can\u0027t.\nWe cannot know beforehand what other resources the model providers will need to be able to compute the logical model on the remote version.\nWe are dealing with logical models where the \u0027scope\u0027 of the logical model requires a full access to the content of the \u0027remote version\u0027. Of course, there are some model providers that won\u0027t need to access the whole repo but that\u0027s the case for EMFCompare at least in our use-cases.\nThe only way I see to improve that in cases where it\u0027s not needed would be to introduce yet another preference to state whether we want to support logical models made of variable sets of files (as described in http://www.eclipse.org/eclipse/platform-team/team3.2/logical-support.doc).\nI\u0027m not sure how much end-users would be able to understan this preference though...",
      "parentUuid": "07b223f6_1cc24c9c",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_003ada4b",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/ModelAwareSyncStrategy.java",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 44628
      },
      "writtenOn": "2016-10-04T21:19:33Z",
      "side": 1,
      "message": "I somehow can\u0027t believe that a logical model comparison would always need the whole remote tree. (Unless you had some crazy model that automagically included any resource with a particular file name or extension, for example.) And just because one doesn\u0027t know exactly yet which exact remote resources will be needed is no reason to pre-emptively load everything.\n\nI think what we need here is a RemoteResourceMappingContext that does not pull in the whole remote tree up front but that builds its cache incrementally.\n\nBuilding a full cache of the remote may be fine for a workspace synchronization, but is it the right approach for comparing a single element, even if that element can be a logical model comprising several (and possibly different local or remote) resources?",
      "parentUuid": "07b223f6_f2cf8124",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_3e8a9127",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/ModelAwareSyncStrategy.java",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 6332
      },
      "writtenOn": "2016-10-07T09:12:30Z",
      "side": 1,
      "message": "Hello Thomas,\n\nI agree that having a RemoteResourceMappingContext that builds its cache in a lazy way would be the ideal solution.\nIt would allow addressing the different kinds of logical models and would not impact the performance of the simple cases.\nI\u0027ll try and have a look at that, however any help or suggestion would be very welcome.",
      "parentUuid": "07b223f6_003ada4b",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_04fbc087",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/ModelAwareSyncStrategy.java",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 44628
      },
      "writtenOn": "2016-10-07T16:16:21Z",
      "side": 1,
      "message": "I\u0027m afraid I can\u0027t help very much. This whole synchronization stuff is an area of EGit that I haven\u0027t really looked at yet, and it\u0027s been a while since I implemented that (model providers, resource variant trees, mapping contexts) in an different project myself (and not for git, either). Off-hand, it looks as if one needed a GitResourceVariantTreeSubscriber that doesn\u0027t pre-load its cache. (Or only a preferably small part of it. Not sure how this would perform if it does multiple tree walks.)",
      "parentUuid": "07b223f6_3e8a9127",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_df4453d2",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/ModelAwareSyncStrategy.java",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 44628
      },
      "writtenOn": "2016-09-28T08:23:24Z",
      "side": 1,
      "message": "These can be long-running operations. If I look at the callers of CompareUtils.compare(), it looks as if this will be called from the UI thread. Maybe we would need to pass through a progress monitor so that the user has a chance to cancel? (And of course, run the CompareUtils.compare() in a busyCursorWhile or some such.)",
      "range": {
        "startLine": 212,
        "startChar": 7,
        "endLine": 212,
        "endChar": 48
      },
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b223f6_52e02d8d",
        "filename": "org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/synchronize/ModelAwareSyncStrategy.java",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 6332
      },
      "writtenOn": "2016-10-03T08:55:24Z",
      "side": 1,
      "message": "Yes, I\u0027ll make sure that long running operations are managed so that UI doesn\u0027t freeze and users can see progress and cancel.",
      "parentUuid": "07b223f6_df4453d2",
      "revId": "8d8486d49c95a7143b71472f3ac7039949a83c23",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}